Index: curl-7.68.0/lib/easy.c
===================================================================
--- curl-7.68.0.orig/lib/easy.c
+++ curl-7.68.0/lib/easy.c
@@ -1175,3 +1175,32 @@ CURLcode curl_easy_upkeep(struct Curl_ea
     return CURLE_OK;
   }
 }
+// curl3 symbols go below:
+#ifdef USE_OPENSSL
+__asm__(".symver curl3_easy_cleanup,curl_easy_cleanup@CURL_OPENSSL_3");
+void curl3_easy_cleanup(void) __attribute__ ((weak, alias ("curl_easy_cleanup")));
+__asm__(".symver curl3_easy_duphandle,curl_easy_duphandle@CURL_OPENSSL_3");
+void curl3_easy_duphandle(void) __attribute__ ((weak, alias ("curl_easy_duphandle")));
+__asm__(".symver curl3_easy_getinfo,curl_easy_getinfo@CURL_OPENSSL_3");
+void curl3_easy_getinfo(void) __attribute__ ((weak, alias ("curl_easy_getinfo")));
+__asm__(".symver curl3_easy_init,curl_easy_init@CURL_OPENSSL_3");
+void curl3_easy_init(void) __attribute__ ((weak, alias ("curl_easy_init")));
+__asm__(".symver curl3_easy_pause,curl_easy_pause@CURL_OPENSSL_3");
+void curl3_easy_pause(void) __attribute__ ((weak, alias ("curl_easy_pause")));
+__asm__(".symver curl3_easy_perform,curl_easy_perform@CURL_OPENSSL_3");
+void curl3_easy_perform(void) __attribute__ ((weak, alias ("curl_easy_perform")));
+__asm__(".symver curl3_easy_recv,curl_easy_recv@CURL_OPENSSL_3");
+void curl3_easy_recv(void) __attribute__ ((weak, alias ("curl_easy_recv")));
+__asm__(".symver curl3_easy_reset,curl_easy_reset@CURL_OPENSSL_3");
+void curl3_easy_reset(void) __attribute__ ((weak, alias ("curl_easy_reset")));
+__asm__(".symver curl3_easy_send,curl_easy_send@CURL_OPENSSL_3");
+void curl3_easy_send(void) __attribute__ ((weak, alias ("curl_easy_send")));
+__asm__(".symver curl3_easy_upkeep,curl_easy_upkeep@CURL_OPENSSL_3");
+void curl3_easy_upkeep(void) __attribute__ ((weak, alias ("curl_easy_upkeep")));
+__asm__(".symver curl3_global_cleanup,curl_global_cleanup@CURL_OPENSSL_3");
+void curl3_global_cleanup(void) __attribute__ ((weak, alias ("curl_global_cleanup")));
+__asm__(".symver curl3_global_init,curl_global_init@CURL_OPENSSL_3");
+void curl3_global_init(void) __attribute__ ((weak, alias ("curl_global_init")));
+__asm__(".symver curl3_global_init_mem,curl_global_init_mem@CURL_OPENSSL_3");
+void curl3_global_init_mem(void) __attribute__ ((weak, alias ("curl_global_init_mem")));
+#endif
Index: curl-7.68.0/lib/escape.c
===================================================================
--- curl-7.68.0.orig/lib/escape.c
+++ curl-7.68.0/lib/escape.c
@@ -242,3 +242,16 @@ void curl_free(void *p)
 {
   free(p);
 }
+// curl3 symbols go below:
+#ifdef USE_OPENSSL
+__asm__(".symver curl3_easy_escape,curl_easy_escape@CURL_OPENSSL_3");
+void curl3_easy_escape(void) __attribute__ ((weak, alias ("curl_easy_escape")));
+__asm__(".symver curl3_easy_unescape,curl_easy_unescape@CURL_OPENSSL_3");
+void curl3_easy_unescape(void) __attribute__ ((weak, alias ("curl_easy_unescape")));
+__asm__(".symver curl3_escape,curl_escape@CURL_OPENSSL_3");
+void curl3_escape(void) __attribute__ ((weak, alias ("curl_escape")));
+__asm__(".symver curl3_free,curl_free@CURL_OPENSSL_3");
+void curl3_free(void) __attribute__ ((weak, alias ("curl_free")));
+__asm__(".symver curl3_unescape,curl_unescape@CURL_OPENSSL_3");
+void curl3_unescape(void) __attribute__ ((weak, alias ("curl_unescape")));
+#endif
Index: curl-7.68.0/lib/formdata.c
===================================================================
--- curl-7.68.0.orig/lib/formdata.c
+++ curl-7.68.0/lib/formdata.c
@@ -948,3 +948,12 @@ void curl_formfree(struct curl_httppost
 }
 
 #endif  /* if disabled */
+// curl3 symbols go below:
+#ifdef USE_OPENSSL
+__asm__(".symver curl3_formadd,curl_formadd@CURL_OPENSSL_3");
+void curl3_formadd(void) __attribute__ ((weak, alias ("curl_formadd")));
+__asm__(".symver curl3_formfree,curl_formfree@CURL_OPENSSL_3");
+void curl3_formfree(void) __attribute__ ((weak, alias ("curl_formfree")));
+__asm__(".symver curl3_formget,curl_formget@CURL_OPENSSL_3");
+void curl3_formget(void) __attribute__ ((weak, alias ("curl_formget")));
+#endif
Index: curl-7.68.0/lib/getenv.c
===================================================================
--- curl-7.68.0.orig/lib/getenv.c
+++ curl-7.68.0/lib/getenv.c
@@ -52,3 +52,8 @@ char *curl_getenv(const char *v)
 {
   return GetEnv(v);
 }
+// curl3 symbols go below:
+#ifdef USE_OPENSSL
+__asm__(".symver curl3_getenv,curl_getenv@CURL_OPENSSL_3");
+void curl3_getenv(void) __attribute__ ((weak, alias ("curl_getenv")));
+#endif
Index: curl-7.68.0/lib/http2.c
===================================================================
--- curl-7.68.0.orig/lib/http2.c
+++ curl-7.68.0/lib/http2.c
@@ -2440,3 +2440,10 @@ char *curl_pushheader_byname(struct curl
 }
 
 #endif /* USE_NGHTTP2 */
+// curl3 symbols go below:
+#ifdef USE_OPENSSL
+__asm__(".symver curl3_pushheader_byname,curl_pushheader_byname@CURL_OPENSSL_3");
+void curl3_pushheader_byname(void) __attribute__ ((weak, alias ("curl_pushheader_byname")));
+__asm__(".symver curl3_pushheader_bynum,curl_pushheader_bynum@CURL_OPENSSL_3");
+void curl3_pushheader_bynum(void) __attribute__ ((weak, alias ("curl_pushheader_bynum")));
+#endif
Index: curl-7.68.0/lib/mime.c
===================================================================
--- curl-7.68.0.orig/lib/mime.c
+++ curl-7.68.0/lib/mime.c
@@ -1909,3 +1909,30 @@ CURLcode Curl_mime_add_header(struct cur
 }
 
 #endif /* if disabled */
+// curl3 symbols go below:
+#ifdef USE_OPENSSL
+__asm__(".symver curl3_mime_addpart,curl_mime_addpart@CURL_OPENSSL_3");
+void curl3_mime_addpart(void) __attribute__ ((weak, alias ("curl_mime_addpart")));
+__asm__(".symver curl3_mime_data,curl_mime_data@CURL_OPENSSL_3");
+void curl3_mime_data(void) __attribute__ ((weak, alias ("curl_mime_data")));
+__asm__(".symver curl3_mime_data_cb,curl_mime_data_cb@CURL_OPENSSL_3");
+void curl3_mime_data_cb(void) __attribute__ ((weak, alias ("curl_mime_data_cb")));
+__asm__(".symver curl3_mime_encoder,curl_mime_encoder@CURL_OPENSSL_3");
+void curl3_mime_encoder(void) __attribute__ ((weak, alias ("curl_mime_encoder")));
+__asm__(".symver curl3_mime_filedata,curl_mime_filedata@CURL_OPENSSL_3");
+void curl3_mime_filedata(void) __attribute__ ((weak, alias ("curl_mime_filedata")));
+__asm__(".symver curl3_mime_filename,curl_mime_filename@CURL_OPENSSL_3");
+void curl3_mime_filename(void) __attribute__ ((weak, alias ("curl_mime_filename")));
+__asm__(".symver curl3_mime_free,curl_mime_free@CURL_OPENSSL_3");
+void curl3_mime_free(void) __attribute__ ((weak, alias ("curl_mime_free")));
+__asm__(".symver curl3_mime_headers,curl_mime_headers@CURL_OPENSSL_3");
+void curl3_mime_headers(void) __attribute__ ((weak, alias ("curl_mime_headers")));
+__asm__(".symver curl3_mime_init,curl_mime_init@CURL_OPENSSL_3");
+void curl3_mime_init(void) __attribute__ ((weak, alias ("curl_mime_init")));
+__asm__(".symver curl3_mime_name,curl_mime_name@CURL_OPENSSL_3");
+void curl3_mime_name(void) __attribute__ ((weak, alias ("curl_mime_name")));
+__asm__(".symver curl3_mime_subparts,curl_mime_subparts@CURL_OPENSSL_3");
+void curl3_mime_subparts(void) __attribute__ ((weak, alias ("curl_mime_subparts")));
+__asm__(".symver curl3_mime_type,curl_mime_type@CURL_OPENSSL_3");
+void curl3_mime_type(void) __attribute__ ((weak, alias ("curl_mime_type")));
+#endif
Index: curl-7.68.0/lib/mprintf.c
===================================================================
--- curl-7.68.0.orig/lib/mprintf.c
+++ curl-7.68.0/lib/mprintf.c
@@ -1171,3 +1171,26 @@ int curl_mvfprintf(FILE *whereto, const
 {
   return dprintf_formatf(whereto, fputc, format, ap_save);
 }
+// curl3 symbols go below:
+#ifdef USE_OPENSSL
+__asm__(".symver curl3_maprintf,curl_maprintf@CURL_OPENSSL_3");
+void curl3_maprintf(void) __attribute__ ((weak, alias ("curl_maprintf")));
+__asm__(".symver curl3_mfprintf,curl_mfprintf@CURL_OPENSSL_3");
+void curl3_mfprintf(void) __attribute__ ((weak, alias ("curl_mfprintf")));
+__asm__(".symver curl3_mprintf,curl_mprintf@CURL_OPENSSL_3");
+void curl3_mprintf(void) __attribute__ ((weak, alias ("curl_mprintf")));
+__asm__(".symver curl3_msnprintf,curl_msnprintf@CURL_OPENSSL_3");
+void curl3_msnprintf(void) __attribute__ ((weak, alias ("curl_msnprintf")));
+__asm__(".symver curl3_msprintf,curl_msprintf@CURL_OPENSSL_3");
+void curl3_msprintf(void) __attribute__ ((weak, alias ("curl_msprintf")));
+__asm__(".symver curl3_mvaprintf,curl_mvaprintf@CURL_OPENSSL_3");
+void curl3_mvaprintf(void) __attribute__ ((weak, alias ("curl_mvaprintf")));
+__asm__(".symver curl3_mvfprintf,curl_mvfprintf@CURL_OPENSSL_3");
+void curl3_mvfprintf(void) __attribute__ ((weak, alias ("curl_mvfprintf")));
+__asm__(".symver curl3_mvprintf,curl_mvprintf@CURL_OPENSSL_3");
+void curl3_mvprintf(void) __attribute__ ((weak, alias ("curl_mvprintf")));
+__asm__(".symver curl3_mvsnprintf,curl_mvsnprintf@CURL_OPENSSL_3");
+void curl3_mvsnprintf(void) __attribute__ ((weak, alias ("curl_mvsnprintf")));
+__asm__(".symver curl3_mvsprintf,curl_mvsprintf@CURL_OPENSSL_3");
+void curl3_mvsprintf(void) __attribute__ ((weak, alias ("curl_mvsprintf")));
+#endif
Index: curl-7.68.0/lib/multi.c
===================================================================
--- curl-7.68.0.orig/lib/multi.c
+++ curl-7.68.0/lib/multi.c
@@ -3345,3 +3345,35 @@ size_t Curl_multi_max_concurrent_streams
   return multi ? ((size_t)multi->max_concurrent_streams ?
                   (size_t)multi->max_concurrent_streams : 100) : 0;
 }
+
+// curl3 symbols go below:
+#ifdef USE_OPENSSL
+__asm__(".symver curl3_multi_add_handle,curl_multi_add_handle@CURL_OPENSSL_3");
+void curl3_multi_add_handle(void) __attribute__ ((weak, alias ("curl_multi_add_handle")));
+__asm__(".symver curl3_multi_assign,curl_multi_assign@CURL_OPENSSL_3");
+void curl3_multi_assign(void) __attribute__ ((weak, alias ("curl_multi_assign")));
+__asm__(".symver curl3_multi_cleanup,curl_multi_cleanup@CURL_OPENSSL_3");
+void curl3_multi_cleanup(void) __attribute__ ((weak, alias ("curl_multi_cleanup")));
+__asm__(".symver curl3_multi_fdset,curl_multi_fdset@CURL_OPENSSL_3");
+void curl3_multi_fdset(void) __attribute__ ((weak, alias ("curl_multi_fdset")));
+__asm__(".symver curl3_multi_info_read,curl_multi_info_read@CURL_OPENSSL_3");
+void curl3_multi_info_read(void) __attribute__ ((weak, alias ("curl_multi_info_read")));
+__asm__(".symver curl3_multi_init,curl_multi_init@CURL_OPENSSL_3");
+void curl3_multi_init(void) __attribute__ ((weak, alias ("curl_multi_init")));
+__asm__(".symver curl3_multi_perform,curl_multi_perform@CURL_OPENSSL_3");
+void curl3_multi_perform(void) __attribute__ ((weak, alias ("curl_multi_perform")));
+__asm__(".symver curl3_multi_remove_handle,curl_multi_remove_handle@CURL_OPENSSL_3");
+void curl3_multi_remove_handle(void) __attribute__ ((weak, alias ("curl_multi_remove_handle")));
+__asm__(".symver curl3_multi_setopt,curl_multi_setopt@CURL_OPENSSL_3");
+void curl3_multi_setopt(void) __attribute__ ((weak, alias ("curl_multi_setopt")));
+__asm__(".symver curl3_multi_socket,curl_multi_socket@CURL_OPENSSL_3");
+void curl3_multi_socket(void) __attribute__ ((weak, alias ("curl_multi_socket")));
+__asm__(".symver curl3_multi_socket_action,curl_multi_socket_action@CURL_OPENSSL_3");
+void curl3_multi_socket_action(void) __attribute__ ((weak, alias ("curl_multi_socket_action")));
+__asm__(".symver curl3_multi_socket_all,curl_multi_socket_all@CURL_OPENSSL_3");
+void curl3_multi_socket_all(void) __attribute__ ((weak, alias ("curl_multi_socket_all")));
+__asm__(".symver curl3_multi_timeout,curl_multi_timeout@CURL_OPENSSL_3");
+void curl3_multi_timeout(void) __attribute__ ((weak, alias ("curl_multi_timeout")));
+__asm__(".symver curl3_multi_wait,curl_multi_wait@CURL_OPENSSL_3");
+void curl3_multi_wait(void) __attribute__ ((weak, alias ("curl_multi_wait")));
+#endif
Index: curl-7.68.0/lib/parsedate.c
===================================================================
--- curl-7.68.0.orig/lib/parsedate.c
+++ curl-7.68.0/lib/parsedate.c
@@ -633,3 +633,8 @@ CURLcode Curl_gmtime(time_t intime, stru
     return CURLE_BAD_FUNCTION_ARGUMENT;
   return CURLE_OK;
 }
+// curl3 symbols go below:
+#ifdef USE_OPENSSL
+__asm__(".symver curl3_getdate,curl_getdate@CURL_OPENSSL_3");
+void curl3_getdate(void) __attribute__ ((weak, alias ("curl_getdate")));
+#endif
Index: curl-7.68.0/lib/setopt.c
===================================================================
--- curl-7.68.0.orig/lib/setopt.c
+++ curl-7.68.0/lib/setopt.c
@@ -2773,3 +2773,8 @@ CURLcode curl_easy_setopt(struct Curl_ea
   va_end(arg);
   return result;
 }
+// curl3 symbols go below:
+#ifdef USE_OPENSSL
+__asm__(".symver curl3_easy_setopt,curl_easy_setopt@CURL_OPENSSL_3");
+void curl3_easy_setopt(void) __attribute__ ((weak, alias ("curl_easy_setopt")));
+#endif
Index: curl-7.68.0/lib/slist.c
===================================================================
--- curl-7.68.0.orig/lib/slist.c
+++ curl-7.68.0/lib/slist.c
@@ -142,3 +142,10 @@ void curl_slist_free_all(struct curl_sli
     item = next;
   } while(next);
 }
+// curl3 symbols go below:
+#ifdef USE_OPENSSL
+__asm__(".symver curl3_slist_append,curl_slist_append@CURL_OPENSSL_3");
+void curl3_slist_append(void) __attribute__ ((weak, alias ("curl_slist_append")));
+__asm__(".symver curl3_slist_free_all,curl_slist_free_all@CURL_OPENSSL_3");
+void curl3_slist_free_all(void) __attribute__ ((weak, alias ("curl_slist_free_all")));
+#endif
Index: curl-7.68.0/lib/strcase.c
===================================================================
--- curl-7.68.0.orig/lib/strcase.c
+++ curl-7.68.0/lib/strcase.c
@@ -259,3 +259,10 @@ int curl_strnequal(const char *first, co
 {
   return Curl_strncasecompare(first, second, max);
 }
+// curl3 symbols go below:
+#ifdef USE_OPENSSL
+__asm__(".symver curl3_strequal,curl_strequal@CURL_OPENSSL_3");
+void curl3_strequal(void) __attribute__ ((weak, alias ("curl_strequal")));
+__asm__(".symver curl3_strnequal,curl_strnequal@CURL_OPENSSL_3");
+void curl3_strnequal(void) __attribute__ ((weak, alias ("curl_strnequal")));
+#endif
Index: curl-7.68.0/lib/strerror.c
===================================================================
--- curl-7.68.0.orig/lib/strerror.c
+++ curl-7.68.0/lib/strerror.c
@@ -1001,3 +1001,9 @@ const char *Curl_sspi_strerror(int err,
   return buf;
 }
 #endif /* USE_WINDOWS_SSPI */
+
+// curl3 symbols go below:
+#ifdef USE_OPENSSL
+__asm__(".symver curl3_easy_strerror,curl_easy_strerror@CURL_OPENSSL_3");
+void curl3_easy_strerror(void) __attribute__ ((weak, alias ("curl_easy_strerror")));
+#endif
Index: curl-7.68.0/lib/urlapi.c
===================================================================
--- curl-7.68.0.orig/lib/urlapi.c
+++ curl-7.68.0/lib/urlapi.c
@@ -1481,3 +1481,16 @@ CURLUcode curl_url_set(CURLU *u, CURLUPa
     u->portnum = port;
   return CURLUE_OK;
 }
+// curl3 symbols go below:
+#ifdef USE_OPENSSL
+__asm__(".symver curl3_url,curl_url@CURL_OPENSSL_3");
+void curl3_url(void) __attribute__ ((weak, alias ("curl_url")));
+__asm__(".symver curl3_url_cleanup,curl_url_cleanup@CURL_OPENSSL_3");
+void curl3_url_cleanup(void) __attribute__ ((weak, alias ("curl_url_cleanup")));
+__asm__(".symver curl3_url_dup,curl_url_dup@CURL_OPENSSL_3");
+void curl3_url_dup(void) __attribute__ ((weak, alias ("curl_url_dup")));
+__asm__(".symver curl3_url_get,curl_url_get@CURL_OPENSSL_3");
+void curl3_url_get(void) __attribute__ ((weak, alias ("curl_url_get")));
+__asm__(".symver curl3_url_set,curl_url_set@CURL_OPENSSL_3");
+void curl3_url_set(void) __attribute__ ((weak, alias ("curl_url_set")));
+#endif
Index: curl-7.68.0/lib/version.c
===================================================================
--- curl-7.68.0.orig/lib/version.c
+++ curl-7.68.0/lib/version.c
@@ -478,3 +478,10 @@ curl_version_info_data *curl_version_inf
   initialized = true;
   return &version_info;
 }
+// curl3 symbols go below:
+#ifdef USE_OPENSSL
+__asm__(".symver curl3_version,curl_version@CURL_OPENSSL_3");
+void curl3_version(void) __attribute__ ((weak, alias ("curl_version")));
+__asm__(".symver curl3_version_info,curl_version_info@CURL_OPENSSL_3");
+void curl3_version_info(void) __attribute__ ((weak, alias ("curl_version_info")));
+#endif
Index: curl-7.68.0/lib/vtls/vtls.c
===================================================================
--- curl-7.68.0.orig/lib/vtls/vtls.c
+++ curl-7.68.0/lib/vtls/vtls.c
@@ -1349,3 +1349,8 @@ CURLsslset curl_global_sslset(curl_sslba
 }
 
 #endif /* !USE_SSL */
+// curl3 symbols go below:
+#ifdef USE_OPENSSL
+__asm__(".symver curl3_global_sslset,curl_global_sslset@CURL_OPENSSL_3");
+void curl3_global_sslset(void) __attribute__ ((weak, alias ("curl_global_sslset")));
+#endif
